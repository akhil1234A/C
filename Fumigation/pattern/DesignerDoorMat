

---------.|.---------
------.|..|..|.------
---.|..|..|..|..|.---
-------WELCOME-------
---.|..|..|..|..|.---
------.|..|..|.------
---------.|.---------

//using straight forward apprach, solving top and bottom half separately
#include <stdio.h>

int main() {
    int n, m;
    printf("Enter the number of rows (n, must be odd): ");
    scanf("%d", &n);
    printf("Enter the number of columns (m, must be 3 times n): ");
    scanf("%d", &m);

    // Check constraints
    if (n % 2 == 0 || m != 3 * n) {
        printf("Invalid input. Please ensure n is odd and m is 3 times n.\n");
        return 1;
    }

    // Top half of the mat
    for (int i = 1; i < n; i += 2) {
        for (int j = 0; j < (m - 3 * i) / 2; j++) {
            printf("-");
        }
        for (int j = 0; j < i; j++) {
            printf(".|.");
        }
        for (int j = 0; j < (m - 3 * i) / 2; j++) {
            printf("-");
        }
        printf("\n");
    }

    // Center of the mat
    for (int j = 0; j < (m - 7) / 2; j++) {
        printf("-");
    }
    printf("WELCOME");
    for (int j = 0; j < (m - 7) / 2; j++) {
        printf("-");
    }
    printf("\n");

    // Bottom half of the mat
    for (int i = n - 2; i > 0; i -= 2) {
        for (int j = 0; j < (m - 3 * i) / 2; j++) {
            printf("-");
        }
        for (int j = 0; j < i; j++) {
            printf(".|.");
        }
        for (int j = 0; j < (m - 3 * i) / 2; j++) {
            printf("-");
        }
        printf("\n");
    }

    return 0;
}

//three loops for * -|- * combine top and half with if

#include <stdio.h>

int main() {
    int n, m;
    printf("Enter the number of rows (n, must be odd): ");
    scanf("%d", &n);
    printf("Enter the number of columns (m, must be 3 times n): ");
    scanf("%d", &m);

    // Check constraints
    if (n % 2 == 0 || m != 3 * n) {
        printf("Invalid input. Please ensure n is odd and m is 3 times n.\n");
        return 1;
    }

    // Print the mat
    for (int i = 1; i <= n; i++) {
        int pattern_count;
        if (i == (n / 2) + 1) {
            // Center row
            for (int j = 0; j < (m - 7) / 2; j++) printf("-");
            printf("WELCOME");
            for (int j = 0; j < (m - 7) / 2; j++) printf("-");
        } else {
            // Top and bottom rows
            if (i <= n / 2) {
                pattern_count = 2 * i - 1; // Top half
            } else {
                pattern_count = 2 * (n - i) + 1; // Bottom half
            }
            for (int j = 0; j < (m - 3 * pattern_count) / 2; j++) printf("-");
            for (int j = 0; j < pattern_count; j++) printf(".|.");
            for (int j = 0; j < (m - 3 * pattern_count) / 2; j++) printf("-");
        }
        printf("\n");
    }

    return 0;
}


// my method - using box method with if conditions 

#include <stdio.h>

int main() {

int n=7; 
int m = n*3; 
int midpoint = (n+1)/2;
int j;
for(int i=1; i<=n; i++){
    if(i==midpoint){
            
            for(j=0; j<midpoint-2; j++){
                printf("---");
            }
            printf("-WELCOME-");
            for(j=0; j<midpoint-2; j++){
                printf("---");
            }
        }
    else if (i<midpoint){
        for(int j=0; j<n; j++){
            if(j<midpoint-i || j>=n-midpoint+i) printf("---");
            else printf("-|-");
        }
    }
    else{
        int RelativeI = 2*midpoint-i; 
         for(int j=0; j<n; j++){
            if(j<midpoint-RelativeI || j>=n-midpoint+RelativeI) printf("---");
            else printf("-|-");
        }
    }
    printf("\n"); 
}
    
 
 return 0;    
}
