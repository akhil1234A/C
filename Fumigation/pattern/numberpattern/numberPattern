pattern group 1: relative row and column pattern 
relation between row and col

Pattern 1: Relative Row 
enter a number: 4
1 1 1 1 1 1 1 1 
2 2 2 2 2 2 2 2 
3 3 3 3 3 3 3 3 
4 4 4 4 4 4 4 4 
3 3 3 3 3 3 3 3 
2 2 2 2 2 2 2 2 
1 1 1 1 1 1 1 1 


#include <stdio.h>

int main() {

int n; 
printf("enter a number: ");
scanf("%d",&n);

for(int i=1; i<=2*n-1; i++) {

	for(int j=0; j<2*n; j++){
		printf("%d ",(i>4? 2*n-i : i));
	} 
	printf("\n");
} 



return 0; 
}

Pattern 2: Relative Col
1 2 3 4 3 2 1 
1 2 3 4 3 2 1 
1 2 3 4 3 2 1 
1 2 3 4 3 2 1 
1 2 3 4 3 2 1 
1 2 3 4 3 2 1 
1 2 3 4 3 2 1

#include <stdio.h>

int main() {

int n; 
printf("enter a number: ");
scanf("%d",&n);


for(int i=1; i<=2*n-1; i++) {

	for(int j=1; j<=2*n-1; j++){
		printf("%d ",(j>4? 2*n-j : j));
	} 
	printf("\n");
} 



return 0; 
} 



Pattern 3: comparing relative row vs relative col 
enter a number: 4
1 1 1 1 1 1 1 
1 2 2 2 2 2 1 
1 2 3 3 3 2 1 
1 2 3 4 3 2 1 
1 2 3 3 3 2 1 
1 2 2 2 2 2 1 
1 1 1 1 1 1 1 


#include <stdio.h>

int main() {

int n; 
printf("enter a number: ");
scanf("%d",&n);

int row=2*n-1; 
for(int i=1; i<=row; i++) {
    
    int relativeRow = i>n? row - i + 1 : i; 

	for(int j=1; j<=row; j++){
	    int relativeCol = j>n? row - j + 1 : j; 
	    
	    int whatToPrint = relativeRow> relativeCol ? relativeCol : relativeRow;
	    
		printf("%d ",whatToPrint);
	} 
	printf("\n");
} 



return 0; 
}

Pattern 4: 

enter a number: 4
4 4 4 4 4 4 4 
4 3 3 3 3 3 4 
4 3 2 2 2 3 4 
4 3 2 1 2 3 4 
4 3 2 2 2 3 4 
4 3 3 3 3 3 4 
4 4 4 4 4 4 4 

method 1: using relative row and relative column
#include <stdio.h>

int main() {

int n; 
printf("enter a number: ");
scanf("%d",&n);

int row=2*n-1; 
for(int i=1; i<=row; i++) {
    
    int relativeRow = i>n? row - i + 1 : i; 

	for(int j=1; j<=row; j++){
	    int relativeCol = j>n? row - j + 1 : j; 
	    
	    int whatToPrint = relativeRow> relativeCol ? relativeCol : relativeRow;
	    
		printf("%d ", n+1-whatToPrint);
	} 
	printf("\n");
} 



return 0; 
}

method 2: using distance between row and col from i and j
#include <stdio.h>
#include <math.h>

// int min(int a, int b) {
    
//     return a>b? b: a; 
// }

int main() {

int n; 
printf("enter a number: ");
scanf("%d",&n);

int row=2*n-1; 
for(int i=1; i<=row; i++) {
    
	for(int j=1; j<=row; j++){
	    
	    
	    //int whatToPrint = min(min(i,row+1-i),min(j,row+1-j));
	    int whatToPrint = fmin(fmin(i,row+1-i),fmin(j,row+1-j));
	    
		printf("%d ", n+1-whatToPrint);
	} 
	printf("\n");
} 



return 0; 
}

pattern group 2: 

pattern 1
enter a number: 4
3 
6 9 
12 15 18 
21 24 27 30 
70 63 56 49 
42 35 28 
21 14 
7 

#include <stdio.h>


int main() {

int n; 
printf("enter a number: ");
scanf("%d",&n);

int numberThree =3, numberSeven=70;

for(int i=1; i<=2*n; i++) {
    
	for(int j=1; j<= (i>n? 2*n-i+1 : i); j++){
	    
		printf("%d ",(i>4? numberSeven : numberThree));
		
		if(i<5) numberThree+=3; 
		else numberSeven-=7; 
	} 
	printf("\n");
} 



return 0; 
}
